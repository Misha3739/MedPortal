<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="8.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Cors" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="2.2.6" />
    <PackageReference Include="RestClient" Version="2.4.5.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\data\clinic-search-params.ts" />
    <None Remove="ClientApp\src\app\data\clinic.ts" />
    <None Remove="ClientApp\src\app\data\doctor.ts" />
    <None Remove="ClientApp\src\app\data\location\location-type.ts" />
    <None Remove="ClientApp\src\app\data\query-search-params.ts" />
    <None Remove="ClientApp\src\app\data\search-info.ts" />
    <None Remove="ClientApp\src\app\data\slots\doctor-slot.ts" />
    <None Remove="ClientApp\src\app\data\speciality.ts" />
    <None Remove="ClientApp\src\app\services\clincs-service.ts" />
    <None Remove="ClientApp\src\app\services\doctors-service.ts" />
    <None Remove="ClientApp\src\app\services\geolocation-service.ts" />
    <None Remove="ClientApp\src\app\services\search-info-service.ts" />
    <None Remove="ClientApp\src\app\services\slots-service.ts" />
    <None Remove="ClientApp\src\index.d.ts" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\MedPortal.Data\MedPortal.Data.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\data\clinic-search-params.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\data\clinic.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\data\doctor.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\data\location\location-type.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\data\query-search-params.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\data\search-info.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\data\slots\doctor-slot.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\data\speciality.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\slots-service.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\services\clincs-service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\doctors-service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\geolocation-service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\search-info-service.ts" />
    <TypeScriptCompile Include="ClientApp\src\index.d.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>


</Project>
